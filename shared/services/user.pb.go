// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SessionToken struct {
	Token                string   `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionToken) Reset()         { *m = SessionToken{} }
func (m *SessionToken) String() string { return proto.CompactTextString(m) }
func (*SessionToken) ProtoMessage()    {}
func (*SessionToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *SessionToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionToken.Unmarshal(m, b)
}
func (m *SessionToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionToken.Marshal(b, m, deterministic)
}
func (m *SessionToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionToken.Merge(m, src)
}
func (m *SessionToken) XXX_Size() int {
	return xxx_messageInfo_SessionToken.Size(m)
}
func (m *SessionToken) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionToken.DiscardUnknown(m)
}

var xxx_messageInfo_SessionToken proto.InternalMessageInfo

func (m *SessionToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UserSignature struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSignature) Reset()         { *m = UserSignature{} }
func (m *UserSignature) String() string { return proto.CompactTextString(m) }
func (*UserSignature) ProtoMessage()    {}
func (*UserSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSignature.Unmarshal(m, b)
}
func (m *UserSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSignature.Marshal(b, m, deterministic)
}
func (m *UserSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSignature.Merge(m, src)
}
func (m *UserSignature) XXX_Size() int {
	return xxx_messageInfo_UserSignature.Size(m)
}
func (m *UserSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSignature.DiscardUnknown(m)
}

var xxx_messageInfo_UserSignature proto.InternalMessageInfo

func (m *UserSignature) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserSignature) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarPath           string   `protobuf:"bytes,3,opt,name=avatarPath,proto3" json:"avatarPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetAvatarPath() string {
	if m != nil {
		return m.AvatarPath
	}
	return ""
}

type NewUserData struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserData) Reset()         { *m = NewUserData{} }
func (m *NewUserData) String() string { return proto.CompactTextString(m) }
func (*NewUserData) ProtoMessage()    {}
func (*NewUserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *NewUserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserData.Unmarshal(m, b)
}
func (m *NewUserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserData.Marshal(b, m, deterministic)
}
func (m *NewUserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserData.Merge(m, src)
}
func (m *NewUserData) XXX_Size() int {
	return xxx_messageInfo_NewUserData.Size(m)
}
func (m *NewUserData) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserData.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserData proto.InternalMessageInfo

func (m *NewUserData) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *NewUserData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *NewUserData) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

type PageData struct {
	Since                uint64   `protobuf:"varint,1,opt,name=since,proto3" json:"since,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageData) Reset()         { *m = PageData{} }
func (m *PageData) String() string { return proto.CompactTextString(m) }
func (*PageData) ProtoMessage()    {}
func (*PageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *PageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageData.Unmarshal(m, b)
}
func (m *PageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageData.Marshal(b, m, deterministic)
}
func (m *PageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageData.Merge(m, src)
}
func (m *PageData) XXX_Size() int {
	return xxx_messageInfo_PageData.Size(m)
}
func (m *PageData) XXX_DiscardUnknown() {
	xxx_messageInfo_PageData.DiscardUnknown(m)
}

var xxx_messageInfo_PageData proto.InternalMessageInfo

func (m *PageData) GetSince() uint64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *PageData) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type LeaderBoardPage struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaderBoardPage) Reset()         { *m = LeaderBoardPage{} }
func (m *LeaderBoardPage) String() string { return proto.CompactTextString(m) }
func (*LeaderBoardPage) ProtoMessage()    {}
func (*LeaderBoardPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *LeaderBoardPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderBoardPage.Unmarshal(m, b)
}
func (m *LeaderBoardPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderBoardPage.Marshal(b, m, deterministic)
}
func (m *LeaderBoardPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderBoardPage.Merge(m, src)
}
func (m *LeaderBoardPage) XXX_Size() int {
	return xxx_messageInfo_LeaderBoardPage.Size(m)
}
func (m *LeaderBoardPage) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderBoardPage.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderBoardPage proto.InternalMessageInfo

func (m *LeaderBoardPage) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*SessionToken)(nil), "services.SessionToken")
	proto.RegisterType((*UserSignature)(nil), "services.UserSignature")
	proto.RegisterType((*User)(nil), "services.User")
	proto.RegisterType((*NewUserData)(nil), "services.NewUserData")
	proto.RegisterType((*PageData)(nil), "services.PageData")
	proto.RegisterType((*LeaderBoardPage)(nil), "services.LeaderBoardPage")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcb, 0x6b, 0xc2, 0x40,
	0x10, 0xc6, 0x7d, 0xa3, 0x63, 0x1f, 0xb0, 0xf4, 0x91, 0xe6, 0x50, 0x64, 0xf1, 0xe0, 0xc9, 0x83,
	0x05, 0x7b, 0x6a, 0xa1, 0xb5, 0xa5, 0x97, 0x5a, 0x24, 0xb6, 0x50, 0xe8, 0x69, 0x1a, 0x07, 0x5d,
	0xa2, 0x89, 0xec, 0xae, 0xfa, 0x1f, 0xf4, 0xef, 0x2e, 0xbb, 0x61, 0x8d, 0x06, 0x2c, 0xf4, 0x96,
	0x6f, 0xe6, 0x9b, 0xdf, 0x6e, 0xe6, 0x5b, 0x80, 0x95, 0x22, 0xd9, 0x5d, 0xca, 0x44, 0x27, 0xac,
	0xae, 0x48, 0xae, 0x45, 0x48, 0x8a, 0xb7, 0xe1, 0x68, 0x4c, 0x4a, 0x89, 0x24, 0x7e, 0x4f, 0x22,
	0x8a, 0xd9, 0x19, 0x54, 0xed, 0x87, 0x57, 0x6c, 0x15, 0x3b, 0x8d, 0x20, 0x15, 0xfc, 0x01, 0x8e,
	0x3f, 0x14, 0xc9, 0xb1, 0x98, 0xc6, 0xa8, 0x57, 0x92, 0x8c, 0x8d, 0x16, 0x28, 0xe6, 0xce, 0x66,
	0x05, 0xf3, 0xa1, 0xbe, 0x44, 0xa5, 0x36, 0x89, 0x9c, 0x78, 0x25, 0xdb, 0xd8, 0x6a, 0xfe, 0x09,
	0x15, 0x83, 0x38, 0x3c, 0x19, 0x8b, 0x30, 0x8a, 0x71, 0x41, 0x6e, 0xd2, 0x69, 0x76, 0x0d, 0x80,
	0x6b, 0xd4, 0x28, 0x47, 0xa8, 0x67, 0x5e, 0xd9, 0x76, 0x77, 0x2a, 0xfc, 0x0b, 0x9a, 0x6f, 0xb4,
	0x31, 0xf0, 0x27, 0xd4, 0xf8, 0xff, 0xab, 0xed, 0x1d, 0x5e, 0xde, 0x3f, 0x9c, 0xf7, 0xa1, 0x3e,
	0xc2, 0x29, 0x39, 0xb2, 0x12, 0x71, 0x48, 0x96, 0x5c, 0x09, 0x52, 0x61, 0xaa, 0x73, 0xb1, 0x10,
	0xda, 0x62, 0x2b, 0x41, 0x2a, 0xf8, 0x2d, 0x9c, 0xbe, 0x12, 0x4e, 0x48, 0x3e, 0x26, 0x28, 0x27,
	0x06, 0xc1, 0xda, 0x50, 0x35, 0x11, 0x28, 0xaf, 0xd8, 0x2a, 0x77, 0x9a, 0xbd, 0x93, 0xae, 0x0b,
	0xa1, 0x6b, 0xee, 0x1e, 0xa4, 0xcd, 0xde, 0x4f, 0x09, 0x6a, 0x46, 0x0f, 0xc7, 0xac, 0x0f, 0x30,
	0x98, 0x51, 0x18, 0xa5, 0xc9, 0x5c, 0x64, 0xfe, 0xdd, 0xc4, 0xfc, 0x1c, 0x87, 0x17, 0xd8, 0x3d,
	0x34, 0x86, 0x18, 0x51, 0x3a, 0x76, 0xb9, 0xdf, 0xde, 0x46, 0xe8, 0x1f, 0xe0, 0xf1, 0x02, 0xbb,
	0x03, 0x18, 0x48, 0x42, 0x4d, 0x36, 0xb0, 0xf3, 0xcc, 0xb7, 0xb3, 0xe6, 0x3f, 0xc6, 0x9f, 0x81,
	0xbd, 0x90, 0xce, 0xff, 0x3d, 0xcb, 0xfc, 0x6e, 0xa1, 0xfe, 0x55, 0x56, 0xcb, 0xd9, 0x79, 0xe1,
	0xbb, 0x66, 0x9f, 0xea, 0xcd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x56, 0x9f, 0x2a, 0xb8,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserMSClient is the client API for UserMS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserMSClient interface {
	CheckToken(ctx context.Context, in *SessionToken, opts ...grpc.CallOption) (*User, error)
	MakeToken(ctx context.Context, in *UserSignature, opts ...grpc.CallOption) (*SessionToken, error)
	CreateUser(ctx context.Context, in *NewUserData, opts ...grpc.CallOption) (*SessionToken, error)
	GetLeaderBoardPage(ctx context.Context, in *PageData, opts ...grpc.CallOption) (*LeaderBoardPage, error)
}

type userMSClient struct {
	cc *grpc.ClientConn
}

func NewUserMSClient(cc *grpc.ClientConn) UserMSClient {
	return &userMSClient{cc}
}

func (c *userMSClient) CheckToken(ctx context.Context, in *SessionToken, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/services.UserMS/CheckToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMSClient) MakeToken(ctx context.Context, in *UserSignature, opts ...grpc.CallOption) (*SessionToken, error) {
	out := new(SessionToken)
	err := c.cc.Invoke(ctx, "/services.UserMS/MakeToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMSClient) CreateUser(ctx context.Context, in *NewUserData, opts ...grpc.CallOption) (*SessionToken, error) {
	out := new(SessionToken)
	err := c.cc.Invoke(ctx, "/services.UserMS/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userMSClient) GetLeaderBoardPage(ctx context.Context, in *PageData, opts ...grpc.CallOption) (*LeaderBoardPage, error) {
	out := new(LeaderBoardPage)
	err := c.cc.Invoke(ctx, "/services.UserMS/GetLeaderBoardPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserMSServer is the server API for UserMS service.
type UserMSServer interface {
	CheckToken(context.Context, *SessionToken) (*User, error)
	MakeToken(context.Context, *UserSignature) (*SessionToken, error)
	CreateUser(context.Context, *NewUserData) (*SessionToken, error)
	GetLeaderBoardPage(context.Context, *PageData) (*LeaderBoardPage, error)
}

func RegisterUserMSServer(s *grpc.Server, srv UserMSServer) {
	s.RegisterService(&_UserMS_serviceDesc, srv)
}

func _UserMS_CheckToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMSServer).CheckToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserMS/CheckToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMSServer).CheckToken(ctx, req.(*SessionToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMS_MakeToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSignature)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMSServer).MakeToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserMS/MakeToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMSServer).MakeToken(ctx, req.(*UserSignature))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMS_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUserData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMSServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserMS/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMSServer).CreateUser(ctx, req.(*NewUserData))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserMS_GetLeaderBoardPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserMSServer).GetLeaderBoardPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserMS/GetLeaderBoardPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserMSServer).GetLeaderBoardPage(ctx, req.(*PageData))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserMS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.UserMS",
	HandlerType: (*UserMSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckToken",
			Handler:    _UserMS_CheckToken_Handler,
		},
		{
			MethodName: "MakeToken",
			Handler:    _UserMS_MakeToken_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserMS_CreateUser_Handler,
		},
		{
			MethodName: "GetLeaderBoardPage",
			Handler:    _UserMS_GetLeaderBoardPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
